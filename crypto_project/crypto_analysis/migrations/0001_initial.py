# Generated by Django 5.1.4 on 2025-02-07 14:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="IndicatorData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cryptocurrency", models.CharField(max_length=50)),
                ("date", models.DateTimeField()),
                ("indicator_name", models.CharField(max_length=100)),
                ("value", models.FloatField()),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["cryptocurrency", "date"],
                        name="crypto_anal_cryptoc_5990bd_idx",
                    ),
                    models.Index(
                        fields=["cryptocurrency", "indicator_name"],
                        name="crypto_anal_cryptoc_3c6fd5_idx",
                    ),
                    models.Index(
                        fields=["date", "indicator_name"],
                        name="crypto_anal_date_03e302_idx",
                    ),
                ],
                "unique_together": {("cryptocurrency", "date", "indicator_name")},
            },
        ),
        migrations.CreateModel(
            name="MarketData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cryptocurrency", models.CharField(max_length=50)),
                ("date", models.DateTimeField()),
                ("open_price", models.FloatField()),
                ("high_price", models.FloatField()),
                ("low_price", models.FloatField()),
                ("close_price", models.FloatField()),
                ("volume", models.FloatField()),
            ],
            options={
                "unique_together": {("cryptocurrency", "date")},
            },
        ),
        migrations.CreateModel(
            name="NewsArticle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(max_length=2000)),
                ("url", models.URLField(unique=True)),
                ("published_at", models.DateTimeField()),
                ("source", models.CharField(max_length=50)),
                ("language", models.CharField(default="en", max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-published_at"],
                "indexes": [
                    models.Index(
                        fields=["published_at"], name="crypto_anal_publish_ea86ff_idx"
                    ),
                    models.Index(
                        fields=["source"], name="crypto_anal_source_3fc6d5_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="KeyEntity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "entity_type",
                    models.CharField(
                        choices=[
                            ("ORG", "Organization"),
                            ("PRODUCT", "Product"),
                            ("GPE", "Location"),
                            ("MONEY", "Money"),
                        ],
                        max_length=20,
                    ),
                ),
                ("text", models.CharField(max_length=255)),
                ("count", models.IntegerField(default=1)),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entities",
                        to="crypto_analysis.newsarticle",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["entity_type"], name="crypto_anal_entity__ccdf55_idx"
                    ),
                    models.Index(fields=["text"], name="crypto_anal_text_0e5fdb_idx"),
                ],
                "unique_together": {("article", "entity_type", "text")},
            },
        ),
        migrations.CreateModel(
            name="SentimentData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vader_compound", models.FloatField()),
                ("bert_positive", models.FloatField()),
                ("emotion_scores", models.JSONField(default=dict)),
                ("topic_scores", models.JSONField(default=dict)),
                ("combined_score", models.FloatField()),
                ("analyzed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "article",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sentiment_data",
                        to="crypto_analysis.newsarticle",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["combined_score"], name="crypto_anal_combine_0a3d82_idx"
                    ),
                    models.Index(
                        fields=["bert_positive"], name="crypto_anal_bert_po_5db4d1_idx"
                    ),
                ],
            },
        ),
    ]
